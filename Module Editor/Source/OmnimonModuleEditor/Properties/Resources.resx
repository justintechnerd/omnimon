<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ErrorListingFolders" xml:space="preserve">
    <value>Error listing folders: {0}</value>
  </data>
  <data name="ErrorRemovingFolder" xml:space="preserve">
    <value>Error removing folder: {0}</value>
  </data>
  <data name="ModuleAlreadyExists" xml:space="preserve">
    <value>Module already exists.</value>
  </data>
  <data name="ModuleFolderNamePrompt" xml:space="preserve">
    <value>Module folder name:</value>
  </data>
  <data name="AddModuleTitle" xml:space="preserve">
    <value>Add Module</value>
  </data>
  <data name="ConfirmDeleteFolder" xml:space="preserve">
    <value>Are you sure you want to delete this folder? This action cannot be undone.</value>
  </data>
  <data name="ConfirmDeletionTitle" xml:space="preserve">
    <value>Confirm Deletion</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="ErrorLoadingModule" xml:space="preserve">
    <value>Error loading module: {0}</value>
  </data>
  <data name="ModuleSaved" xml:space="preserve">
    <value>Module saved!</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="TabModule" xml:space="preserve">
    <value>Module</value>
  </data>
  <data name="TabPet" xml:space="preserve">
    <value>Pet</value>
  </data>
  <data name="TabBattle" xml:space="preserve">
    <value>Battle</value>
  </data>
  <data name="TabItem" xml:space="preserve">
    <value>Item</value>
  </data>
  <data name="ErrorLoadingMonster" xml:space="preserve">
    <value>Error loading monster.json: {0}</value>
  </data>
  <data name="ErrorSavingMonster" xml:space="preserve">
    <value>Error saving monster.json: {0}</value>
  </data>
  <data name="ConfirmRemovePet" xml:space="preserve">
    <value>Do you want to remove the pet "{0}"?</value>
  </data>
  <data name="Confirmation" xml:space="preserve">
    <value>Confirmation</value>
  </data>
  <data name="Warning" xml:space="preserve">
    <value>Warning</value>
  </data>
  <data name="ImportSpritesSuccess" xml:space="preserve">
    <value>Sprites imported successfully!</value>
  </data>
  <data name="ImportSpritesTitle" xml:space="preserve">
    <value>Import sprites</value>
  </data>
  <data name="ImportSpritesFileNotFound" xml:space="preserve">
    <value>File not found: {0}</value>
  </data>
  <data name="ImportSpritesSelectPet" xml:space="preserve">
    <value>Select a valid pet to import sprites.</value>
  </data>
  <data name="ImportSpritesError" xml:space="preserve">
    <value>Error importing sprites: {0}</value>
  </data>
  <data name="CouldNotCopyName" xml:space="preserve">
    <value>Could not copy the name to the clipboard.</value>
  </data>
  <data name="CouldNotOpenBrowser" xml:space="preserve">
    <value>Could not open the browser.</value>
  </data>
  <data name="EvolutionsEditor_Title" xml:space="preserve">
    <value>Evolutions Editor</value>
  </data>
  <data name="Label_Version" xml:space="preserve">
    <value>Version</value>
  </data>
  <data name="Label_VersionWithNumber" xml:space="preserve">
    <value>Version {0}</value>
  </data>
  <data name="Button_Organize" xml:space="preserve">
    <value>Organize</value>
  </data>
  <data name="Button_Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="Button_Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Button_ToggleConnect" xml:space="preserve">
    <value>Toggle Connect</value>
  </data>
  <data name="Button_Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Label_VersionStage" xml:space="preserve">
    <value>Ver. {0} | Stage {1}</value>
  </data>
  <data name="EvolutionCriteriaForm_Title" xml:space="preserve">
    <value>Edit Evolution Criteria</value>
  </data>
  <data name="EvolutionCriteriaForm_LabelTo" xml:space="preserve">
    <value>to</value>
  </data>
  <data name="EvolutionCriteriaForm_LabelConditionHearts" xml:space="preserve">
    <value>Condition Hearts</value>
  </data>
  <data name="EvolutionCriteriaForm_LabelTraining" xml:space="preserve">
    <value>Training</value>
  </data>
  <data name="EvolutionCriteriaForm_LabelBattles" xml:space="preserve">
    <value>Battles</value>
  </data>
  <data name="EvolutionCriteriaForm_LabelWinRatio" xml:space="preserve">
    <value>Win Ratio</value>
  </data>
  <data name="EvolutionCriteriaForm_LabelMistakes" xml:space="preserve">
    <value>Mistakes</value>
  </data>
  <data name="EvolutionCriteriaForm_LabelLevel" xml:space="preserve">
    <value>Level</value>
  </data>
  <data name="EvolutionCriteriaForm_LabelOverfeed" xml:space="preserve">
    <value>Overfeed</value>
  </data>
  <data name="EvolutionCriteriaForm_LabelSleepDisturbances" xml:space="preserve">
    <value>Sleep Disturbances</value>
  </data>
  <data name="EvolutionCriteriaForm_LabelArea" xml:space="preserve">
    <value>Area</value>
  </data>
  <data name="EvolutionCriteriaForm_LabelJogressName" xml:space="preserve">
    <value>Jogress Name</value>
  </data>
  <data name="EvolutionCriteriaForm_LabelStageJogress" xml:space="preserve">
    <value>Stage (Jogress)</value>
  </data>
  <data name="EvolutionCriteriaForm_LabelVersionJogress" xml:space="preserve">
    <value>Version (Jogress)</value>
  </data>
  <data name="EvolutionCriteriaForm_LabelAttributeJogress" xml:space="preserve">
    <value>Attribute (Jogress)</value>
  </data>
  <data name="EvolutionCriteriaForm_LabelSpecialEncounter" xml:space="preserve">
    <value>Special Encounter</value>
  </data>
  <data name="EvolutionCriteriaForm_LabelStage5" xml:space="preserve">
    <value>Stage-5</value>
  </data>
  <data name="EvolutionCriteriaForm_LabelItem" xml:space="preserve">
    <value>Item</value>
  </data>
  <data name="Button_Copy" xml:space="preserve">
    <value>Copy</value>
  </data>
  <data name="Button_Paste" xml:space="preserve">
    <value>Paste</value>
  </data>
  <data name="EvolutionCriteriaForm_ErrorCopy" xml:space="preserve">
    <value>Error copying criteria: </value>
  </data>
  <data name="EvolutionCriteriaForm_ErrorPaste" xml:space="preserve">
    <value>Error pasting criteria: </value>
  </data>
  <data name="EvolutionCriteriaForm_ErrorInvalidClipboard" xml:space="preserve">
    <value>Invalid data in clipboard.</value>
  </data>
  <data name="Button_Add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="Button_Remove" xml:space="preserve">
    <value>Remove</value>
  </data>
  <data name="Button_Add" xml:space="preserve">
    <value>Add</value>
    <comment>Label for the Add button in pet list panel</comment>
  </data>
  <data name="Button_Remove" xml:space="preserve">
    <value>Remove</value>
    <comment>Label for the Remove button in pet list panel</comment>
  </data>
  <data name="Button_Download" xml:space="preserve">
    <value>Download</value>
    <comment>Label for the Download button in pet sprite panel</comment>
  </data>
  <data name="Button_Import" xml:space="preserve">
    <value>Import</value>
    <comment>Label for the Import button in pet sprite panel</comment>
  </data>
  <data name="Button_Refresh" xml:space="preserve">
    <value>Refresh</value>
    <comment>Label for the Refresh button in pet sprite panel</comment>
  </data>
  <data name="ImportSpritesConfirm" xml:space="preserve">
    <value>Import sprites from "{0}" for this pet?
The contents will be extracted to the pet's folder.</value>
    <comment>Confirmation message for importing sprites</comment>
  </data>
  <data name="StageSelectForm_Title" xml:space="preserve">
    <value>Select Stage</value>
    <comment>Title for the stage selection dialog</comment>
  </data>
  <data name="StageSelectForm_Label" xml:space="preserve">
    <value>Choose the stage for the new Pet:</value>
    <comment>Label for the stage selection dialog</comment>
  </data>
  <data name="StageSelectForm_StageItem" xml:space="preserve">
    <value>Stage {0}</value>
    <comment>Item label for each stage in the stage selection dialog</comment>
  </data>
  <data name="Button_OK" xml:space="preserve">
    <value>OK</value>
    <comment>Label for the OK button</comment>
  </data>
  <data name="BattleTab_Button_FastEditor" xml:space="preserve">
    <value>Fast Editor</value>
    <comment>Label for the Fast Editor button in BattleTab</comment>
  </data>
  <data name="BattleTab_Label_Info" xml:space="preserve">
    <value>Ver. {0} | Stage {1} | Area {2} | Round {3}</value>
    <comment>Info label for enemy panel in BattleTab</comment>
  </data>
  <data name="BattleTab_ConfirmRemove" xml:space="preserve">
    <value>Do you want to remove the enemy "{0}"?</value>
    <comment>Confirmation message for removing an enemy</comment>
  </data>
  <data name="BattleTab_CopySuffix" xml:space="preserve">
    <value> Copy</value>
    <comment>Suffix for copied enemy names</comment>
  </data>
  <data name="BattleTab_NewEnemyName" xml:space="preserve">
    <value>New Enemy</value>
    <comment>Default name for a new enemy</comment>
  </data>
  <data name="BattleTab_ErrorSaving" xml:space="preserve">
    <value>Error saving battle.json: {0}</value>
    <comment>Error message for saving battle.json</comment>
  </data>
  <data name="BattleTab_ErrorLoading" xml:space="preserve">
    <value>Error loading battle.json: {0}</value>
    <comment>Error message for loading battle.json</comment>
  </data>
  <data name="BattleTab_ErrorLoadingMonster" xml:space="preserve">
    <value>Error loading monster.json: {0}</value>
    <comment>Error message for loading monster.json</comment>
  </data>
  <data name="EnemyAddDialog_Title" xml:space="preserve">
    <value>Add Enemy</value>
    <comment>Title for the enemy add dialog</comment>
  </data>
  <data name="EnemyAddDialog_Label_Version" xml:space="preserve">
    <value>Version:</value>
    <comment>Label for the version ComboBox in enemy add dialog</comment>
  </data>
  <data name="EnemyAddDialog_Label_Pet" xml:space="preserve">
    <value>Pet:</value>
    <comment>Label for the pet ComboBox in enemy add dialog</comment>
  </data>
  <data name="EnemyAddDialog_VersionItem" xml:space="preserve">
    <value>Version {0}</value>
    <comment>Item label for each version in the enemy add dialog</comment>
  </data>
  <data name="EnemyAddDialog_PetItem_Custom" xml:space="preserve">
    <value>Custom</value>
    <comment>Item label for custom pet in the enemy add dialog</comment>
  </data>
  <data name="Button_OK" xml:space="preserve">
    <value>OK</value>
    <comment>Label for the OK button</comment>
  </data>
  <data name="Button_Cancel" xml:space="preserve">
    <value>Cancel</value>
    <comment>Label for the Cancel button</comment>
  </data>
  <data name="PetTab_CopySuffix" xml:space="preserve">
    <value> Copy</value>
    <comment>Suffix for copied pet names</comment>
  </data>
  <data name="PetTab_NewPetName" xml:space="preserve">
    <value>New Pet</value>
    <comment>Default name for a new pet</comment>
  </data>
  <data name="ModuleTab_TabMain" xml:space="preserve">
    <value>Main</value>
    <comment>Label for the Main tab in ModuleTab</comment>
  </data>
  <data name="ModuleTab_TabUnlocks" xml:space="preserve">
    <value>Unlocks</value>
    <comment>Label for the Unlocks tab in ModuleTab</comment>
  </data>
  <data name="ModuleTab_TabBackgrounds" xml:space="preserve">
    <value>Backgrounds</value>
    <comment>Label for the Backgrounds tab in ModuleTab</comment>
  </data>
  <data name="BackgroundsPanel_ImportTitle" xml:space="preserve">
    <value>Select background PNG</value>
    <comment>Title for the import background dialog</comment>
  </data>
  <data name="BackgroundsPanel_AlreadyExists" xml:space="preserve">
    <value>Background "{0}" already exists.</value>
    <comment>Warning for duplicate background name</comment>
  </data>
</root>